name: Release Vay.js Packages

on:
  push:
    branches:
      - main
      - "release/*"

permissions:
  contents: write # Needed to commit version updates

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required for commit history

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install Dependencies
        run: bun install --frozen-lockfile

      - name: Determine Next Version (From @vayjs/vay)
        id: versioning
        run: |
          MASTER_PACKAGE="packages/@vayjs/vay"

          CURRENT_VERSION=$(jq -r .version $MASTER_PACKAGE/package.json)
          echo "Current master package version: $CURRENT_VERSION"

          if git log -1 --pretty=%B | grep -iqE "^(feat|feature):"; then
            NEW_VERSION=$(bunx semver $CURRENT_VERSION --increment minor)
          elif git log -1 --pretty=%B | grep -iqE "^(fix|patch):"; then
            NEW_VERSION=$(bunx semver $CURRENT_VERSION --increment patch)
          elif git log -1 --pretty=%B | grep -iqE "^(breaking change):"; then
            NEW_VERSION=$(bunx semver $CURRENT_VERSION --increment major)
          else
            NEW_VERSION=$CURRENT_VERSION
          fi

          echo "new_version=$NEW_VERSION" >> $GITHUB_ENV
          echo "New master package version: $NEW_VERSION"

      - name: Update All Package Versions
        run: |
          MASTER_PACKAGE="packages/@vayjs/vay"

          # Update version in the master package
          jq --arg version "$NEW_VERSION" '.version = $version' "$MASTER_PACKAGE/package.json" > temp.json && mv temp.json "$MASTER_PACKAGE/package.json"

          # Update version in all other packages
          for package in packages/@vayjs/*; do
            if [ -f "$package/package.json" ]; then
              jq --arg version "$NEW_VERSION" '.version = $version' "$package/package.json" > temp.json && mv temp.json "$package/package.json"
            fi
          done

      - name: Commit Version Updates
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add packages/@vayjs/**/package.json
          git commit -m "chore: bump version to $NEW_VERSION" || echo "No changes to commit"
          git tag "v$NEW_VERSION"
          git push --follow-tags

      - name: Dry Run Publishing All Packages
        run: |
          echo "Performing dry run for all packages..."
          for package in packages/@vayjs/*; do
            if [ -f "$package/package.json" ]; then
              echo "Dry run for $(basename $package)..."
              (cd "$package" && bun publish --dry-run)
            fi
          done

    #   - name: Publish All Packages
    #     env:
    #       NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    #     run: |
    #       echo "Publishing all packages..."
    #       for package in packages/@vayjs/*; do
    #         if [ -f "$package/package.json" ]; then
    #           echo "Publishing $(basename $package)..."
    #           (cd "$package" && bun publish --access public)
    #         fi
    #       done